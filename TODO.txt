setup page
// TODO confirmation screen?
        // thank you screen?
        // errors for when parts of each form aren't filled out...

- add link to setup from dashboard even when filled out?
    - popular values from db if they exist.

- make footer date not hard coded..

-- change LOG split after deciding name!! (in global file)

- save where the user wanted to go before forcing them to go to the login page, then redirect to there

- change home, login etc links when signed in
- make sure can't sign up or log in when already logged in

RESEARCH
- 

oder... todo
- find api to get food data and add to daily amount..
- store data for test profiles (calories)
- basic styling
- create graph etc based on recorded data
- phone feature with openai to get/store food data

FONT AWESOME!!!!!!!!!!!!

- HIDE PASSWORD IN LOGIN/SIGNUP FORM AND REPLACE WITH *s. Have button to toggle view or not...
- forgot password button - send to email, then to reset
- when signing up - need to check if username or password is unique (sql will do this with primary keys..)

1 - send back the WHOLE html with the form info there (i guess read the html file then update the fields?)
or
2 - use fetch and json (better?) and then only have to touch cookies if sign in was successful


daily data
- user foreign key
- DATE
- calories
- weight
- some nutriants?
- food eaten (ref to other table?) // probably not necessary
    -- way to finalize and save total foods? that way users forgetting don't save just 400 kcal or somthing...


tables:
- users
username NOT NULL UNIQUE
name (first / second?) OPTIONAL
gender
age (dob) DATE
weight
height
goal weight?
weekly goal (+/- INT)???
activity level [0-4]

Sedentary	1.2	Office worker, little/no exercise - 0
Lightly Active	1.375	Light exercise (1-3 days/week) - 1
Moderately Active	1.55	Moderate exercise (3-5 days/week) - 2
Very Active	1.725	Hard exercise (6-7 days/week) - 3
Super Active	1.9	Athletes, physical labor jobs - 4

{sex, age, weight, height} = BMR
BMR * activity level = TDEE (Total Daily Energy Expenditure)

- stored food (previous eaten..?)
user foreign key
    // need join table
- id
- food info (multiple columns..)
- 

JOIN 
- user id
- food id
- how often eaten

data table? - used to show history 
user foreign key
DATE
calories eaten
weight for that day

today's food - MANY TO MANY







ideas:

- front page should have '0/2000' box always on display
    - text under saying deficit or not and how much

- dashboard has popular food choices?
    - or or favourite food items (ones you recently ate or often eat)

- once a week prompts you to enter weight?

- graphs to track progess

- set goals?

















/my-node-app
│
├── /public/               # Static files (HTML, CSS, JS)
│   ├── index.html
│   ├── style.css
│   └── script.js
│
├── /routes/               # Route handlers (for different HTTP endpoints)
│   ├── home.js
│   └── about.js
│
├── /controllers/          # Logic for handling requests (optional)
│   ├── homeController.js
│   └── aboutController.js
│
├── /models/               # Data handling (like database or business logic)
│   └── userModel.js
│
├── /views/                # Template files (if using a templating engine)
│   └── home.pug
│
├── /middleware/           # Custom middleware (like logging, auth)
│   └── logger.js
│
├── /utils/                # Utility functions (helpers, file reading, etc.)
│   └── fileUtils.js
│
├── server.js              # Main server file (entry point)
├── package.json           # Project metadata and dependencies
└── .gitignore             # Git ignore file (for excluding node_modules, etc.)
